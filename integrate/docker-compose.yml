#  vim:ts=2:sts=2:sw=2:et
#  There is a bug of ceph/demo, it does not support NETWORK_AUTO_DETECT
#  So I use static IP address for this docker-compose file

version: '2'

services:
  ceph:
    image: journeymidnight/ceph
    container_name: ceph
    environment:
      - MON_IP=10.5.0.6
      - CEPH_PUBLIC_NETWORK=10.5.0.0/16
    networks:
      vpcbr:
        ipv4_address: "10.5.0.6"
    volumes:
      - ./cephconf:/etc/ceph/

  redis:
    image: redis
    container_name: redis
    command: redis-server --requirepass hehehehe
    ports:
      - "6379:6379"
    networks:
      vpcbr:
        ipv4_address: "10.5.0.8"

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      vpcbr:
        ipv4_address: "10.5.0.9"
  

  tidb:
    image: pingcap/tidb:v2.1.1
    container_name: tidb
    networks:
      vpcbr:
        ipv4_address: "10.5.0.17"
    ports:
      - "4000:4000"
      - "10080:10080"
    volumes:
      - ./tidbconf/tidb.toml:/tidb.toml:ro
    command:
      - --store=mocktikv
      - --config=/tidb.toml
      - -L=debug
  
  vault:
    image: vault
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
      - VAULT_TOKEN=myroot
      - VAULT_ADDR=http://127.0.0.1:8200
    cap_add:
      - IPC_LOCK
    networks:
      vpcbr:
        ipv4_address: "10.5.0.19"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      vpcbr:
        ipv4_address: "10.5.0.22"

  kafka:
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines: 
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup. 
    # If the latter is true, you will need to change the value 'localhost' in 
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those 
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      vpcbr:
        ipv4_address: "10.5.0.21"


networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
